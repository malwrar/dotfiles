# Make sure path includes our local bin directory
path+=("$HOME/bin" "$HOME/.local/bin")

# If I'm on macos and have coreutils installed, use those.
if hash gdate 2>/dev/null; then
    alias date="gdate"  # nanosecond precision
fi

# Calculate stats about how fast the previous command ran.
PREVCMD_START_SEC=""
PREVCMD_START_NSEC=""
preexec () { 
    PREVCMD_START_SEC="$(date +%s)"
    PREVCMD_START_NSEC="$(date +%N)"
}

# If there are stats for a previous command, display them before showing the
# prompt again.
precmd() {
    if [ -z "$PREVCMD_START_SEC" ] || [ -z "$PREVCMD_START_NSEC" ]; then
        return
    fi

    DIFF_SEC=$(($(date +%s) - $PREVCMD_START_SEC))
    DIFF_NSEC=$(($(date +%N) - $PREVCMD_START_NSEC))

    print ""
    print "^ ${DIFF_SEC}s, ${DIFF_NSEC}ns"
    #printf "\n^ time taken: ${DIFF_SEC}s, ${DIFFNSEC}ns"
}

# Customize prompt
PROMPT="%F{black}%* %F{magenta}[%1~] %F{black}> %F{white}"
PROMPT2="%F{black}%_... %F{white}"

# Ever notice how, when a task requires using a terminal, it usually ends with
# several random terminals sprawled across a window? Solution: pair each
# terminal window with a tmux session, that way we can make use of tmux windows
# (tabs) and panes (splits) to organize things. If this is undesired for any
# reason, you can always exit to get a regular shell.
if hash tmux 2>/dev/null && [ "$TMUX" = "" ]; then tmux new; fi

# Use vi mode
bindkey -v

# Vi mode is cool and all, but I do like ctrl+r to search history
bindkey '^r' history-incremental-search-backward

# Backspace is also nice to have
bindkey '^?' backward-delete-char

# The default 0.4 second timeout for esc in vi mode feels too slow, use 0.1
# seconds instead.
export KEYTIMEOUT=1

# Use vi mode in pretty much any tool that uses GNU Readline. We use an ohmyzsh
# plugin for zsh vi mode.
set editing-mode vi

# We should use (n)vim for our editor, or fall back to vi since it's
# [defined by posix](https://pubs.opengroup.org/onlinepubs/9699919799/utilities/vi.html)
# and therefore very likely to be on the machine we're using.
if hash nvim 2>/dev/null; then
    export EDITOR="nvim"
elif hash vim 2>/dev/null; then
    export EDITOR="vim"
else
    export EDITOR="vi"
fi

# If we have nvim installed (we should), use it over vim seamlessly
if type "nvim" > /dev/null; then
    alias vim="nvim"
fi

# Speaking of aliases, lets be sure they're tab-completable
setopt COMPLETEALIASES

# Share history between shells
setopt SHARE_HISTORY

# Don't overwrite history either
setopt APPEND_HISTORY

# Save when a command was run and how long it took to complete.
setopt EXTENDED_HISTORY

# Don't save next line if it is the same as prev
setopt HISTIGNOREDUPS

# Pretty    obvious,    right?
setopt HIST_REDUCE_BLANKS

# Shut up, computer
setopt NO_BEEP

# Disable x11's ugly passphrase prompt
unset SSH_ASKPASS

# Disables ctrl-s (dumb feature that "pauses" screen)
setopt NO_FLOW_CONTROL

autoload -Uz compinit
compinit

# Configure golang stuff
export GOPATH="${HOME}/.go/"
path+=("$GOPATH/bin")

# Configure rust stuff
source $HOME/.cargo/env
source $HOME/.cargo/bin

# Configure k8s stuff
if hash kubectl 2>/dev/null; then
    alias k="kubectl"
    source <(kubectl completion zsh)
    complete -F __start_kubectl k
fi

# If I'm at work, use some stuff to work with internal systems.
if [ -f "$HOME/.zshrc.work" ]; then
    source "$HOME/.zshrc.work"
fi
